continue
 mario_y > princess_pos[1] 
continue
 mario_y > princess_pos[1] 
mario_x < princess_pos[0]
mario_x > princess_pos[0]
princess_pos
grid_matrix
mario_x
mario_y
continue
princess_pos
grid_matrix
mario_y
mario_x
continue
princess_pos[0]
mario_y < princess_pos[1]
mario_x < princess_pos[0]
if mario_x > princess_pos[0] then puts 'LEFT'; 'LEFT'
princess_pos
mario_x > princess_pos[0]
continue
mario_y
mario
continue
grid_matrix
mario_y
mario_x
continue
[mario_x, mario_y]
continue
[princess_x, princess_y]
continue
grid_matrix
continue
princess_x, princess_y = get_princess_xy(grid_matrix)
grid_matrix
continue
grid_matrix
continue
grid_matrix
continue
grid_matrix
continue
grid_matrix
continue
grid_matrix
continue
grid_matrix
continue
grid_matrix
continue
grid_matrix
continue
grid_matrix
continue
grid_matrix
continue
grid_matrix
continue
_grid_size
grid_matrix
continue
grid_matrix
continue
grid_matrix
_grid_size
 princess_x, princess_y = get_princess_xy(grid_matrix)
continue
_grid_size
grid_matrix
continue
grid_matrix.detect { |grid_row| grid_row.include?('p') }
grid_matrix
_grid_size
continue
grid_matrix
_grid_size
    return princess_x, princess_y
    princess_y = grid_matrix.index(grid_row_with_princess)
    princess_x = grid_row_with_princess.index('p')
    grid_row_with_princess = grid_matrix.detect { |grid_row| grid_row.include?('p') }
  def get_princess_xy(grid_matrix)
  end
    end
      mario_y += 1
      puts 'DOWN'
    while mario_y < princess_y
    end
      mario_y -= 1
      puts 'UP'
    while mario_y > princess_y
    end
      mario_x += 1
      puts 'RIGHT'
    while mario_x < princess_x
    end
      mario_x -= 1
      puts 'LEFT'
    while mario_x > princess_x
    mario_x, mario_y = get_mario_xy(grid_matrix)
    # cal mario x,y
    princess_x, princess_y = get_princess_xy(grid_matrix)
    # cal princess x,y
  def displayPathtoPrincess(_grid_size, grid_matrix)
  0.upto(grid_size - 1).each { |i| grid_matrix[i] = gets.strip }
  grid_matrix = Array.new(grid_size)
  grid_size = gets.to_i
class BotSavesPrincess
